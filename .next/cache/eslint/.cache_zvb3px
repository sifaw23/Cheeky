[{"/home/runner/TraceAI/app/layout.tsx":"1","/home/runner/TraceAI/app/page.tsx":"2","/home/runner/TraceAI/components/CardCorner.tsx":"3","/home/runner/TraceAI/components/Sidebar.tsx":"4","/home/runner/TraceAI/components/ui/button.tsx":"5","/home/runner/TraceAI/components/ui/card.tsx":"6","/home/runner/TraceAI/components/ui/input.tsx":"7","/home/runner/TraceAI/components/ui/select.tsx":"8","/home/runner/TraceAI/components/ui/textarea.tsx":"9","/home/runner/TraceAI/components/ui/toast-context.tsx":"10","/home/runner/TraceAI/components/ui/toast.tsx":"11","/home/runner/TraceAI/components/ui/toaster.tsx":"12","/home/runner/TraceAI/components/ui/use-toast.ts":"13","/home/runner/TraceAI/lib/utils.ts":"14"},{"size":656,"mtime":1732286321686,"results":"15","hashOfConfig":"16"},{"size":6061,"mtime":1732287496147,"results":"17","hashOfConfig":"16"},{"size":309,"mtime":1732287434850,"results":"18","hashOfConfig":"16"},{"size":4110,"mtime":1732286484773,"results":"19","hashOfConfig":"16"},{"size":1820,"mtime":1728306954598,"results":"20","hashOfConfig":"16"},{"size":1880,"mtime":1728306970999,"results":"21","hashOfConfig":"16"},{"size":827,"mtime":1728306981766,"results":"22","hashOfConfig":"16"},{"size":4372,"mtime":1728309469061,"results":"23","hashOfConfig":"16"},{"size":775,"mtime":1728307512058,"results":"24","hashOfConfig":"16"},{"size":2368,"mtime":1728325949797,"results":"25","hashOfConfig":"16"},{"size":4822,"mtime":1732126873580,"results":"26","hashOfConfig":"16"},{"size":930,"mtime":1732126932829,"results":"27","hashOfConfig":"16"},{"size":3787,"mtime":1732126844784,"results":"28","hashOfConfig":"16"},{"size":165,"mtime":1728306588958,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8p17la",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/runner/TraceAI/app/layout.tsx",[],[],"/home/runner/TraceAI/app/page.tsx",["74"],[],"// app/page.tsx\nimport React from 'react';\nimport { MoreVertical, Trash2 } from 'lucide-react';\nimport Link from 'next/link';\n\nconst CardCorner = () => (\n  <svg \n    className=\"absolute top-0 right-0 z-10\" \n    width=\"24\" \n    height=\"24\" \n    viewBox=\"0 0 24 24\" \n    fill=\"none\"\n  >\n    <path\n      d=\"M0 0H24V20C24 8.954305 15.045695 0 4 0H0Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nexport default function DashboardPage() {\n  const sections = [\n    {\n      id: 'open',\n      title: 'Open',\n      count: 5,\n      color: 'border-l-[3px] border-l-blue-400',\n      subtext: '(approve to earn)'\n    },\n    {\n      id: 'pending',\n      title: 'Pending',\n      count: 3,\n      color: 'border-l-[3px] border-l-yellow-400'\n    },\n    {\n      id: 'rejected',\n      title: 'Rejected',\n      count: 2,\n      color: 'border-l-[3px] border-l-red-400'\n    },\n    {\n      id: 'accepted',\n      title: 'Accepted',\n      count: 6,\n      color: 'border-l-[3px] border-l-green-400'\n    }\n  ];\n\n  const tasks = [\n    {\n      title: 'Task t4t - 13 November 2024',\n      points: 450,\n      duration: '4h',\n      type: 'Task',\n      timestamp: '13:42'\n    },\n    {\n      title: 'Recording - 23 September 2024',\n      points: 1450,\n      duration: '2d',\n      type: 'Passive',\n      timestamp: '3:45:42'\n    },\n    {\n      title: 'Recording - 12 November 2024',\n      points: 1450,\n      duration: '2d',\n      type: 'Passive',\n      timestamp: '3:45:42'\n    },\n    {\n      title: 'Recording - 12 November 2024',\n      points: 1450,\n      duration: '2d',\n      type: 'Passive',\n      timestamp: '3:45:42'\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white border-b border-gray-100\">\n        <div className=\"flex items-center justify-between px-8 py-4\">\n          <div className=\"flex items-center space-x-2 text-sm\">\n            <Link href=\"/\" className=\"flex items-center space-x-2 text-gray-600\">\n              <span className=\"w-5 h-5 bg-gray-50 rounded flex items-center justify-center\">□</span>\n              <span>My Board</span>\n            </Link>\n            <span className=\"text-gray-400\">›</span>\n            <span className=\"text-gray-600\">My Board</span>\n          </div>\n          <button className=\"p-2 hover:bg-gray-50 rounded-lg\">\n            <MoreVertical className=\"h-5 w-5 text-gray-400\" />\n          </button>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"px-8 py-6\">\n        <h1 className=\"text-2xl font-semibold mb-6\">My Board</h1>\n\n        {/* Tabs */}\n        <div className=\"bg-gray-100 inline-flex rounded-lg p-1 mb-8\">\n          {['My Board', 'Library', 'To Do Only', 'Archive'].map((tab, index) => (\n            <button\n              key={tab}\n              className={`px-4 py-2 text-sm rounded-lg transition-colors ${\n                index === 0 \n                  ? 'bg-white shadow-sm font-medium' \n                  : 'text-gray-600 hover:bg-white/50'\n              }`}\n            >\n              {tab}\n            </button>\n          ))}\n        </div>\n\n        {/* Status Sections */}\n        <div className=\"grid grid-cols-4 gap-4 mb-8\">\n          {sections.map((section) => (\n            <div \n              key={section.id} \n              className={`relative bg-white rounded-xl shadow-sm pl-4 ${section.color}`}\n            >\n              <CardCorner />\n              <div className=\"p-4 flex items-center justify-between\">\n                <div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"font-medium\">{section.title}</span>\n                    <span className=\"text-gray-500\">{section.count}</span>\n                  </div>\n                  {section.subtext && (\n                    <div className=\"text-xs text-gray-500 mt-0.5\">{section.subtext}</div>\n                  )}\n                </div>\n                <button className=\"p-1.5 hover:bg-gray-50 rounded-lg\">\n                  <MoreVertical className=\"h-4 w-4 text-gray-400\" />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Task Grid */}\n        <div className=\"grid grid-cols-2 gap-6\">\n          {tasks.map((task, index) => (\n            <div \n              key={index}\n              className=\"group relative bg-white rounded-xl shadow-sm overflow-hidden\"\n            >\n              <CardCorner />\n              <div className=\"relative\">\n                <img \n                  src={`/api/placeholder/400/300`} \n                  alt={task.title}\n                  className=\"w-full aspect-video object-cover\"\n                />\n                <div className=\"absolute top-3 right-3 flex space-x-2\">\n                  <button className=\"p-1.5 bg-white/90 backdrop-blur-sm rounded-lg opacity-0 group-hover:opacity-100 transition-opacity shadow-sm hover:bg-white\">\n                    <Trash2 className=\"h-4 w-4 text-gray-600\" />\n                  </button>\n                  <button className=\"p-1.5 bg-white/90 backdrop-blur-sm rounded-lg opacity-0 group-hover:opacity-100 transition-opacity shadow-sm hover:bg-white\">\n                    <MoreVertical className=\"h-4 w-4 text-gray-600\" />\n                  </button>\n                </div>\n                <div className=\"absolute bottom-3 right-3 text-sm text-white font-medium\">\n                  {task.timestamp}\n                </div>\n              </div>\n              <div className=\"p-4\">\n                <h3 className=\"text-sm font-medium\">{task.title}</h3>\n                <div className=\"mt-2 flex items-center space-x-3 text-xs text-gray-500\">\n                  <div className=\"flex items-center space-x-1\">\n                    <span>□</span>\n                    <span>{task.points} pts</span>\n                  </div>\n                  <span>{task.duration}</span>\n                  <span className=\"px-2 py-0.5 bg-gray-100 rounded\">{task.type}</span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n}","/home/runner/TraceAI/components/CardCorner.tsx",[],[],"/home/runner/TraceAI/components/Sidebar.tsx",["75"],[],"import React from 'react';\nimport Link from 'next/link';\nimport { \n  LayoutDashboard, \n  BarChart2, \n  ListTodo, \n  Bell, \n  PlaySquare, \n  Settings,\n  MonitorPlay,\n  Headphones,\n  BookOpen\n} from 'lucide-react';\n\nconst Sidebar = () => {\n  const navigationItems = [\n    { icon: BarChart2, text: 'Analytics', href: '/analytics' },\n    { icon: ListTodo, text: 'Task List', href: '/tasks' },\n    { icon: LayoutDashboard, text: 'My Board', href: '/', active: true },\n    { icon: Bell, text: 'Notifications', href: '/notifications' },\n    { icon: PlaySquare, text: 'Watch Tutorials', href: '/tutorials' },\n    { icon: Settings, text: 'Settings', href: '/settings' },\n  ];\n\n  const bottomItems = [\n    { icon: Headphones, text: 'Support', href: '/support' },\n    { icon: BookOpen, text: 'Documentation', href: '/docs' },\n  ];\n\n  return (\n    <aside className=\"w-64 bg-white h-screen flex flex-col fixed left-0 top-0 px-4\">\n      {/* Logo */}\n      <div className=\"py-6\">\n        <Link href=\"/\" className=\"flex items-center space-x-2\">\n          <div className=\"relative\">\n            <div className=\"w-6 h-6 bg-black transform rotate-45\"></div>\n            <div className=\"absolute top-1/2 left-1/2 w-4 h-4 bg-cyan-400 transform -translate-x-1/2 -translate-y-1/2\"></div>\n          </div>\n          <span className=\"text-xl font-semibold\">TraceAI</span>\n        </Link>\n      </div>\n\n      {/* Main Navigation */}\n      <nav className=\"flex-1 space-y-1\">\n        {navigationItems.map((item) => (\n          <SidebarItem\n            key={item.text}\n            icon={item.icon}\n            text={item.text}\n            href={item.href}\n            active={item.active}\n          />\n        ))}\n\n        {/* Passive Mode Button */}\n        <div className=\"mt-8 mb-8\">\n          <button className=\"w-full bg-white border border-gray-100 shadow-sm rounded-2xl p-4 text-left hover:bg-gray-50\">\n            <div className=\"flex items-center space-x-3\">\n              <MonitorPlay className=\"h-6 w-6 text-cyan-500\" />\n              <div>\n                <div className=\"text-sm font-medium text-cyan-500\">Start Passive Mode</div>\n                <div className=\"text-xs text-gray-500\">Earn while doing anything</div>\n                <div className=\"text-xs text-gray-500\">on your computer</div>\n              </div>\n            </div>\n          </button>\n        </div>\n\n        {/* Bottom Links */}\n        <div className=\"space-y-1\">\n          {bottomItems.map((item) => (\n            <SidebarItem\n              key={item.text}\n              icon={item.icon}\n              text={item.text}\n              href={item.href}\n            />\n          ))}\n        </div>\n      </nav>\n\n      {/* User Profile */}\n      <div className=\"py-4\">\n        <Link href=\"/profile\" className=\"flex items-center space-x-3 p-2 rounded-lg hover:bg-gray-50\">\n          <div className=\"w-10 h-10 rounded-lg bg-gray-100 overflow-hidden\">\n            <img \n              src=\"/api/placeholder/40/40\" \n              alt=\"Profile\" \n              className=\"w-full h-full object-cover\"\n            />\n          </div>\n          <div>\n            <div className=\"text-sm font-medium\">Amrit Singh</div>\n            <div className=\"text-xs text-gray-500\">Silver</div>\n          </div>\n          <div className=\"ml-auto\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M7 4L13 10L7 16\" stroke=\"#666666\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n          </div>\n        </Link>\n      </div>\n    </aside>\n  );\n};\n\nconst SidebarItem = ({ \n  icon: Icon, \n  text, \n  href, \n  active = false \n}: { \n  icon: any; \n  text: string; \n  href: string; \n  active?: boolean;\n}) => (\n  <Link\n    href={href}\n    className={`\n      flex items-center space-x-3 px-3 py-2.5 rounded-lg\n      ${active \n        ? 'bg-cyan-50 text-cyan-500' \n        : 'text-gray-700 hover:bg-gray-50'\n      }\n    `}\n  >\n    <Icon className=\"h-5 w-5\" strokeWidth={1.5} />\n    <span className=\"text-sm font-medium\">{text}</span>\n  </Link>\n);\n\nexport default Sidebar;","/home/runner/TraceAI/components/ui/button.tsx",[],[],"/home/runner/TraceAI/components/ui/card.tsx",[],[],"/home/runner/TraceAI/components/ui/input.tsx",[],[],"/home/runner/TraceAI/components/ui/select.tsx",[],[],"/home/runner/TraceAI/components/ui/textarea.tsx",[],[],"/home/runner/TraceAI/components/ui/toast-context.tsx",[],[],"/home/runner/TraceAI/components/ui/toast.tsx",[],[],"/home/runner/TraceAI/components/ui/toaster.tsx",[],[],"/home/runner/TraceAI/components/ui/use-toast.ts",[],[],"/home/runner/TraceAI/lib/utils.ts",[],[],{"ruleId":"76","severity":1,"message":"77","line":155,"column":17,"nodeType":"78","endLine":159,"endColumn":19},{"ruleId":"76","severity":1,"message":"77","line":86,"column":13,"nodeType":"78","endLine":90,"endColumn":15},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement"]